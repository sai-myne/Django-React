{"version":3,"sources":["logo.svg","lookup/components.js","tweets/lookup.js","tweets/buttons.js","profiles/components.js","profiles/utils.js","profiles/badge.js","profiles/lookup.js","tweets/detail.js","tweets/list.js","tweets/create.js","tweets/feed.js","tweets/components.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","backendLookup","method","endpoint","callback","data","jsonData","JSON","stringify","xhr","XMLHttpRequest","url","responseType","csrftoken","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","open","setRequestHeader","onload","status","response","detail","window","location","href","indexOf","onerror","e","console","log","message","send","apiTweetFeed","nextUrl","undefined","replace","apiTweetList","username","ActionBtn","props","tweet","action","didPerformAction","likes","className","actionDisplay","display","handleActionBackendEvent","type","onClick","event","preventDefault","tweetId","id","apiTweetAction","UserLink","children","UserDisplay","user","includeFullName","hideLink","nameDisplay","first_name","last_name","Fragment","UserPicture","userIdSpan","DisplayCount","numeral","format","ProfileBadge","didFollowToggle","profileLoading","currentVerb","is_following","follower_count","following_count","bio","ProfileBadgeComponent","useState","didLookup","setDidLookup","profile","setProfile","setProfileLoading","handleBackendLookup","useEffect","apiProfileDetail","actionVerb","toLowerCase","apiProfileFollowToggle","ParentTweet","parent","Tweet","isRetweet","retweeter","hideActions","didRetweet","actionTweet","setActionTweet","match","pathname","urlTweetId","groups","tweetid","isDetail","handlePerformAction","newActionTweet","content","TweetsList","tweetsInit","setTweetsInit","tweets","setTweets","setNextUrl","tweetsDidSet","setTweetsDidSet","final","newTweets","concat","next","results","alert","handleDidRetweet","newTweet","updateTweetsInit","unshift","updateFinalTweets","map","item","index","key","TweetCreate","textAreaRef","React","createRef","didTweet","handleBakcendUpdate","onSubmit","newVal","current","value","ref","required","FeedList","TweetsComponent","setNewTweet","canTweet","tempNewTweets","TweetDetailComponent","setTweet","apiTweetDetail","App","src","logo","alt","target","rel","Boolean","hostname","appEl","getElementById","ReactDOM","render","createElement","tweetsEl","dataset","tweetFeedEl","querySelectorAll","forEach","container","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.662c4b2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","function getCookie(name) {\r\n  var cookieValue = null;\r\n  if (document.cookie && document.cookie !== '') {\r\n      var cookies = document.cookie.split(';');\r\n      for (var i = 0; i < cookies.length; i++) {\r\n          var cookie = cookies[i].trim();\r\n          // Does this cookie string begin with the name we want?\r\n          if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n              cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n              break;\r\n          }\r\n      }\r\n  }\r\n  return cookieValue;\r\n}\r\n\r\nexport function backendLookup(method, endpoint, callback, data) {\r\n  let jsonData;\r\n  if (data) {\r\n    jsonData = JSON.stringify(data);\r\n  }\r\n  const xhr = new XMLHttpRequest(); // xhr = SomeClass()\r\n  const url = `http://localhost:8000/api${endpoint}`;\r\n  xhr.responseType = \"json\";\r\n  const csrftoken = getCookie('csrftoken');\r\n  xhr.open(method, url)\r\n  xhr.setRequestHeader(\"Content-Type\", \"application/json\")\r\n\r\n  if (csrftoken){\r\n    //xhr.setRequestHeader(\"HTTP_X_REQUESTED_WITH\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\")\r\n    xhr.setRequestHeader(\"X-CSRFToken\", csrftoken)\r\n  }\r\n  xhr.onload = function () {\r\n    if(xhr.status === 403 && xhr.response) {\r\n      const detail = xhr.response.detail\r\n      if(detail=== \"Authentication credentials were not provided.\"){\r\n        if (window.location.href.indexOf(\"login\") === -1)\r\n          window.location.href=\"/login?showLoginRequired=true\"\r\n      }\r\n\r\n    }\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function (e) {\r\n    console.log(\"error\", e)\r\n    callback({ message: \"The request was an error\" }, 400);\r\n  };\r\n  xhr.send(jsonData);\r\n}\r\n\r\n\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiTweetCreate(newTweet, callback) {\r\n    backendLookup(\"POST\", \"/tweets/create/\", callback, { content: newTweet });\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = { id: tweetId, action: action }\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\nexport function apiTweetDetail(tweetId, callback) {\r\n    backendLookup(\"GET\", `/tweets/${tweetId}/`, callback);\r\n}\r\n\r\nexport function apiTweetFeed(callback, nextUrl) {\r\n    let endpoint = \"/tweets/feed/\"\r\n    if(nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\nexport function apiTweetList(username, callback, nextUrl) {\r\n    let endpoint = \"/tweets/\"\r\n    if (username){\r\n        endpoint = `/tweets/?username=${username}`\r\n    }\r\n    if(nextUrl !== null && nextUrl !== undefined){\r\n        endpoint = nextUrl.replace(\"http://localhost:8000/api\", \"\")\r\n    }\r\n    backendLookup(\"GET\", endpoint, callback);\r\n}\r\n\r\n","import React from \"react\";\r\n\r\nimport { apiTweetAction } from \"./lookup\";\r\n\r\nexport function ActionBtn(props) {\r\n    const { tweet, action, didPerformAction} = props;\r\n    const likes = tweet.likes ? tweet.likes : 0\r\n    const className = props.className\r\n      ? props.className\r\n      : \"btn btn-primary btn-sm\";\r\n    const actionDisplay = action.display ? action.display : \"Action\";\r\n  \r\n    const handleActionBackendEvent = (response, status) => {\r\n      if ((status === 200 || status === 201) && didPerformAction) {\r\n        didPerformAction(response, status)\r\n      }\r\n    };\r\n    const handleClick = (event) => {\r\n      event.preventDefault();\r\n      apiTweetAction(tweet.id, action.type, handleActionBackendEvent);\r\n    };\r\n    const display =\r\n      action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n    return (\r\n      <button className={className} onClick={handleClick}>\r\n        {display}\r\n      </button>\r\n    );\r\n  }","import React from \"react\";\r\n\r\n\r\nexport function UserLink(props) {\r\n  const {username} = props\r\n  const hanldeUserLink = (event) => {\r\n    window.location.href = `/profiles/${username}`\r\n  }\r\n  return <span className=\"pointer\" onClick={hanldeUserLink}>\r\n    {props.children}\r\n    </span>\r\n}\r\n\r\nexport function UserDisplay(props){\r\n  const {user, includeFullName, hideLink} = props\r\n  const nameDisplay = includeFullName === true ? `${user.first_name} ${user.last_name}` : null\r\n  \r\n  return <React.Fragment>\r\n    {nameDisplay} {hideLink === true ? `@${user.username}` : \r\n    <UserLink username={user.username}>@{user.username}</UserLink>}\r\n    </React.Fragment>\r\n}\r\n\r\nexport function UserPicture (props) {\r\n  const {user, hideLink} = props\r\n  const userIdSpan = <span className='mx-1 px-3 py-2 rounded-circle bg-dark text-white'>\r\n    {user.username[0]}\r\n  </span>\r\n  return hideLink === true ? userIdSpan : <UserLink username={user.username}>{userIdSpan}</UserLink>\r\n}\r\n","import React from \"react\";\r\nimport numeral from 'numeral'\r\n\r\nexport function DisplayCount(props){\r\n    return <span className={props.className}>{numeral(props.children).format('0a')}</span>\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { apiProfileDetail, apiProfileFollowToggle } from \"./lookup\";\r\nimport { UserDisplay, UserPicture } from \"./components\";\r\nimport {DisplayCount} from './utils'\r\n\r\nfunction ProfileBadge(props) {\r\n  const { user, didFollowToggle, profileLoading } = props;\r\n  let currentVerb = user && user.is_following ? \"Unfollow\" : \"Follow\";\r\n  currentVerb = profileLoading ? \"Loading...\" : currentVerb;\r\n  const handleFollowToggle = (event) => {\r\n    event.preventDefault();\r\n    if (didFollowToggle && !profileLoading) {\r\n      didFollowToggle(currentVerb);\r\n    }\r\n  };\r\n  return user ? (\r\n    <div>\r\n      <UserPicture user={user} hideLink />\r\n      <p>\r\n        <UserDisplay user={user} includeFullName hideLink />\r\n      </p>\r\n      <p><DisplayCount>{user.follower_count}</DisplayCount> {user.follower_count === 1 ? \"follower\" : \"followers\"}</p>\r\n      <p><DisplayCount>{user.following_count}</DisplayCount> following</p>\r\n      <p>{user.location}</p>\r\n      <p>{user.bio}</p>\r\n      <button className=\"btn btn-primary\" onClick={handleFollowToggle}>\r\n        {currentVerb}\r\n      </button>\r\n    </div>\r\n  ) : null;\r\n}\r\n\r\nexport function ProfileBadgeComponent(props) {\r\n  const { username } = props;\r\n  const [didLookup, setDidLookup] = useState(false);\r\n  const [profile, setProfile] = useState(null);\r\n  const [profileLoading, setProfileLoading] = useState(false);\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200) {\r\n      setProfile(response);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (didLookup === false) {\r\n      apiProfileDetail(username, handleBackendLookup);\r\n      setDidLookup(true);\r\n    }\r\n  }, [username, didLookup, setDidLookup]);\r\n  const handleNewFollow = (actionVerb) => {\r\n    apiProfileFollowToggle(username, actionVerb, (response, status) => {\r\n      console.log(response, status);\r\n      if (status === 200) {\r\n        setProfile(response);\r\n      }\r\n      setProfileLoading(false);\r\n    });\r\n    setProfileLoading(true);\r\n  };\r\n  return didLookup === false ? (\r\n    \"Loading...\"\r\n  ) : profile ? (\r\n    <ProfileBadge\r\n      user={profile}\r\n      didFollowToggle={handleNewFollow}\r\n      profileLoading={profileLoading}\r\n    />\r\n  ) : null;\r\n}\r\n","import {backendLookup} from '../lookup'\r\n\r\nexport function apiProfileDetail(username, callback) {\r\n    backendLookup(\"GET\", `/profiles/${username}/`, callback);\r\n}\r\n\r\nexport function apiTweetAction(tweetId, action, callback) {\r\n    const data = { id: tweetId, action: action }\r\n    backendLookup(\"POST\", \"/tweets/action/\", callback, data);\r\n}\r\n\r\nexport function apiProfileFollowToggle(username, action, callback) {\r\n    const data = {action: `${action && action}`.toLowerCase() }\r\n    backendLookup(\"POST\", `/profiles/${username}/follow`, callback, data);\r\n}","import React, { useState } from \"react\";\r\nimport {ActionBtn} from './buttons'\r\nimport {UserDisplay, UserPicture} from '../profiles'\r\n\r\n\r\n\r\nexport function ParentTweet(props) {\r\n    const { tweet } = props;\r\n    return tweet.parent ? <Tweet isRetweet  retweeter={props.retweeter} hideActions className={\" \"} tweet={tweet.parent} />\r\n      : null;\r\n  }\r\n  \r\n  export function Tweet(props) {\r\n    const { tweet, didRetweet, hideActions, isRetweet, retweeter} = props;\r\n    const [actionTweet, setActionTweet] = useState(\r\n      props.tweet ? props.tweet : null\r\n    );\r\n    let className = props.className ? props.className : 'col-10 mx-auto col-md-6'\r\n    className = isRetweet === true ? `${className} p-2 border rounded` : className\r\n    const path = window.location.pathname\r\n    var match = path.match(/(?<tweetid>\\d+)/)\r\n    const urlTweetId = match ? match.groups.tweetid : -1\r\n    \r\n    const isDetail = `${tweet.id}` === `${urlTweetId}`\r\n    const handleLink = (event) => {\r\n      event.preventDefault()\r\n      window.location.href = `/${tweet.id}`\r\n    }\r\n  \r\n    const handlePerformAction = (newActionTweet, status) => {\r\n      if (status === 200){\r\n        setActionTweet(newActionTweet)\r\n      } else if (status === 201) {\r\n        if (didRetweet){\r\n          didRetweet(newActionTweet)\r\n        }\r\n      }\r\n    }\r\n    return (\r\n      <div className={className}>\r\n        {isRetweet === true && <div className='mb-2'>\r\n          <span className='small text-muted'>Retweeted via <UserDisplay user={retweeter} /></span></div>}\r\n        <div className='d-flex'>\r\n          <div className=''>\r\n            <UserPicture user={tweet.user} />\r\n          </div>\r\n          <div className='col-11'>\r\n            <div>\r\n              <p>\r\n                <UserDisplay includeFullName user={tweet.user} />\r\n              </p>\r\n              <p>\r\n                {tweet.content}\r\n              </p>\r\n              <ParentTweet tweet={tweet} retweeter={tweet.user}/>\r\n            </div>\r\n            \r\n            <div className=\"btn btn-group px-0\">\r\n              {(actionTweet && hideActions !== true) && (<React.Fragment>\r\n                  <ActionBtn\r\n                    tweet={actionTweet}\r\n                    didPerformAction={handlePerformAction}\r\n                    action={{ type: \"like\", display: \"Likes\" }}\r\n                  />\r\n                  <ActionBtn\r\n                    tweet={actionTweet}\r\n                    didPerformAction={handlePerformAction}\r\n                    action={{ type: \"unlike\", display: \"Unlike\" }}\r\n                  />\r\n                  <ActionBtn\r\n                    tweet={actionTweet}\r\n                    didPerformAction={handlePerformAction}\r\n                    action={{ type: \"retweet\", display: \"Retweet\" }}\r\n                  />\r\n                </React.Fragment>\r\n              )}\r\n                \r\n                {isDetail === true ? null : <button className='btn btn-outline-primary btn-sm' onClick={handleLink}>View</button>}\r\n              </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n  ","import React, { useState, useEffect } from \"react\";\r\nimport { apiTweetList } from \"./lookup\";\r\nimport {Tweet} from './detail'\r\n\r\nexport function TweetsList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [nextUrl, setNextUrl] = useState(null);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    useEffect(() => {\r\n      const final = [...props.newTweets].concat(tweetsInit);\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final);\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results);\r\n            setTweetsDidSet(true);\r\n          } else {\r\n            alert(\"There was an error\");\r\n          }\r\n        };\r\n        apiTweetList(props.username, handleTweetListLookup);\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweetsInit(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null){\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets);\r\n            setTweets(newTweets);\r\n          } else {\r\n            alert(\"There was an error\");\r\n          }\r\n        }\r\n        apiTweetList(props.username, handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n    return <React.Fragment> {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            key={`${index}-{item.id}`}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n          />\r\n        );\r\n      })}\r\n      { nextUrl !== null && <button className='btn btn-outline-primary' onClick={handleLoadNext}>\r\n        Load Next</button>}\r\n    </React.Fragment> \r\n  }","import React from \"react\";\r\nimport { apiTweetCreate} from \"./lookup\";\r\n\r\nexport function TweetCreate(props){\r\n  const textAreaRef = React.createRef();\r\n  const {didTweet} = props\r\n  const handleBakcendUpdate = (response, status) => {\r\n    if (status === 201) {\r\n      didTweet(response);\r\n    } else {\r\n      alert(\"An error occured, please try again\");\r\n    }\r\n  };\r\n  const hanldeSubmit = (event) => {\r\n    // backend api request\r\n    event.preventDefault();\r\n    const newVal = textAreaRef.current.value;\r\n    apiTweetCreate(newVal, handleBakcendUpdate);\r\n    textAreaRef.current.value = \"\";\r\n  };\r\n  return <div className={props.className}>\r\n    <form onSubmit={hanldeSubmit}>\r\n      <textarea\r\n        ref={textAreaRef}\r\n        required={true}\r\n        className=\"form-control\"\r\n        name=\"tweet\"\r\n      ></textarea>\r\n      <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n        Tweet\r\n      </button>\r\n    </form>\r\n  </div>\r\n  \r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { apiTweetFeed } from \"./lookup\";\r\nimport {Tweet} from './detail'\r\n\r\nexport function FeedList(props) {\r\n    const [tweetsInit, setTweetsInit] = useState([]);\r\n    const [tweets, setTweets] = useState([]);\r\n    const [nextUrl, setNextUrl] = useState(null);\r\n    const [tweetsDidSet, setTweetsDidSet] = useState(false);\r\n    useEffect(() => {\r\n      const final = [...props.newTweets].concat(tweetsInit);\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final);\r\n      }\r\n    }, [props.newTweets, tweets, tweetsInit]);\r\n    useEffect(() => {\r\n      if (tweetsDidSet === false) {\r\n        const handleTweetListLookup = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            setTweetsInit(response.results);\r\n            setTweetsDidSet(true);\r\n          }\r\n        };\r\n        apiTweetFeed(handleTweetListLookup);\r\n      }\r\n    }, [tweetsInit, tweetsDidSet, setTweetsDidSet, props.username]);\r\n    const handleDidRetweet = (newTweet) => {\r\n      const updateTweetsInit = [...tweetsInit]\r\n      updateTweetsInit.unshift(newTweet)\r\n      setTweetsInit(updateTweetsInit)\r\n      const updateFinalTweets = [...tweets]\r\n      updateFinalTweets.unshift(tweets)\r\n      setTweetsInit(updateFinalTweets)\r\n    }\r\n\r\n    const handleLoadNext = (event) => {\r\n      event.preventDefault()\r\n      if (nextUrl !== null){\r\n        const handleLoadNextResponse = (response, status) => {\r\n          if (status === 200) {\r\n            setNextUrl(response.next)\r\n            const newTweets = [...tweets].concat(response.results)\r\n            setTweetsInit(newTweets);\r\n            setTweets(newTweets);\r\n          }\r\n        }\r\n        apiTweetFeed(handleLoadNextResponse, nextUrl)\r\n      }\r\n    }\r\n    return <React.Fragment> {tweets.map((item, index) => {\r\n        return (\r\n          <Tweet\r\n            tweet={item}\r\n            didRetweet={handleDidRetweet}\r\n            key={`${index}-{item.id}`}\r\n            className=\"my-5 py-5 border bg-white text-dark\"\r\n          />\r\n        );\r\n      })}\r\n      { nextUrl !== null && <button className='btn btn-outline-primary' onClick={handleLoadNext}>\r\n        Load Next</button>}\r\n    </React.Fragment> \r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { TweetsList } from './list'\r\nimport {TweetCreate} from './create'\r\nimport {apiTweetDetail} from './lookup'\r\nimport {Tweet} from './detail'\r\nimport {FeedList} from './feed'\r\n\r\nexport function FeedComponent(props) {\r\n  const [newTweets, setNewTweet] = useState([]);\r\n\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) => {\r\n    // backend api response handler\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweet(tempNewTweets);\r\n    \r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <div className=\"col-12 mb-3\">\r\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n      </div>\r\n      <FeedList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetsComponent(props) {\r\n  const [newTweets, setNewTweet] = useState([]);\r\n\r\n  const canTweet = props.canTweet === \"false\" ? false : true\r\n  const handleNewTweet = (newTweet) => {\r\n    // backend api response handler\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift(newTweet);\r\n    setNewTweet(tempNewTweets);\r\n    \r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <div className=\"col-12 mb-3\">\r\n        {canTweet === true && <TweetCreate didTweet={handleNewTweet} className='col-12 mb-3' />}\r\n      </div>\r\n      <TweetsList newTweets={newTweets} {...props} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function TweetDetailComponent(props){\r\n  const {tweetId} = props\r\n  const [didLookup, setDidLookup] = useState(false)\r\n  const [tweet, setTweet] = useState(null)\r\n  const handleBackendLookup = (response, status) => {\r\n    if (status === 200){\r\n      setTweet(response)\r\n    } else {\r\n      alert(\"There was an error finding your tweet.\")\r\n    }\r\n  } \r\n  useEffect(()=>{\r\n    if(didLookup === false){\r\n      apiTweetDetail(tweetId, handleBackendLookup)\r\n      setDidLookup(true)\r\n    }\r\n  }, [tweetId, didLookup, setDidLookup])\r\n  return tweet === null ? null : <Tweet tweet={tweet} className={props.className} />\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport {TweetsComponent} from './tweets'\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <div>\n          <TweetsComponent />\n        </div>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {FeedComponent, TweetsComponent, TweetDetailComponent} from './tweets'\nimport * as serviceWorker from './serviceWorker';\nimport { ProfileBadgeComponent } from './profiles/badge';\n\nconst appEl = document.getElementById('root')\nif(appEl){\n  ReactDOM.render(<App />, appEl)\n}\n\nconst e = React.createElement\nconst tweetsEl = document.getElementById(\"tweetme-2\")\nif(tweetsEl){\n  ReactDOM.render(\n    e(TweetsComponent, tweetsEl.dataset), tweetsEl)\n}\n\nconst tweetFeedEl = document.getElementById(\"tweetme-2-feed\")\nif(tweetFeedEl){\n  ReactDOM.render(\n    e(FeedComponent, tweetFeedEl.dataset), tweetFeedEl)\n}\n\nconst tweetDetailElements = document.querySelectorAll(\".tweetme-2-detail\")\n\ntweetDetailElements.forEach(container => {\n  ReactDOM.render(\n    e(TweetDetailComponent, container.dataset),\n    container,\n  )\n})\n\nconst userProfileBadgeElements = document.querySelectorAll(\".tweetme-2-profile-badge\")\n\nuserProfileBadgeElements.forEach(container => {\n  ReactDOM.render(\n    e(ProfileBadgeComponent, container.dataset),\n    container,\n  )\n})\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />, appEl\n//   </React.StrictMode>,\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}